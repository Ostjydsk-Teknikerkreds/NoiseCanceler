/*******************************************************************************
 * @file LMS.h
 * @date 2023-12-06
 * @author Markus Rytter (markus.r@live.dk)
 *
 * @copyright Copyright (c) 2023
 *
 *******************************************************************************/

/**
 * @addtogroup Domain
 * @{
 */

#ifndef LMS_H
#define LMS_H

/*******************************************************************************
 *    Includes
 ******************************************************************************/

#include <cstdint>
#include <vector>

/*******************************************************************************
 *    Defines
 ******************************************************************************/

/*******************************************************************************
 *    Type defines
 ******************************************************************************/

/*******************************************************************************
 *    External
 ******************************************************************************/

/*******************************************************************************
 *    Function prototypes
 ******************************************************************************/

/*******************************************************************************
 *    Class prototypes
 ******************************************************************************/

class LMS
{
  public:
    LMS(uint16_t inputs, float learning_rate);
    float evaluate(std::vector<float> inputs);
    void error(float error, std::vector<float> inputs);

    void reset();

  protected:
  private:
    std::vector<float> _weights;
    float              _learning_rate;
};

/*******************************************************************************/
/** @} addtogroup end */

#endif // LMS_H