/*******************************************************************************
 * @file Template.h
 * @date 2023-08-31
 * @author Markus Rytter (markus.r@live.dk)
 *
 * @copyright Copyright (c) 2023
 *
 *******************************************************************************/

/**
 * @addtogroup Template
 * @{
 */

#ifndef TEMPLATE_H
#define TEMPLATE_H

/*******************************************************************************
 *    Includes
 ******************************************************************************/

#include <cstdint>

/*******************************************************************************
 *    Defines
 ******************************************************************************/

#define ABC (1)

/*******************************************************************************
 *    Type defines
 ******************************************************************************/

using Abc_t = struct
{
    uint16_t a1;
    uint16_t a2;
};

/*******************************************************************************
 *    External
 ******************************************************************************/

/*******************************************************************************
 *    Function prototypes
 ******************************************************************************/

/**
 * @brief Template demo function
 *
 * @param abc   is a structure ...
 * @param a     is just a simple integer ...
 */
int ABCMethodA(Abc_t abc, int aa);

/*******************************************************************************
 *    Class prototypes
 ******************************************************************************/

#ifdef __cplusplus

/**
 * @brief Class Abc
 *
 */
class Abc
{

  public:
    /**
     * @brief Construct a new Abc object
     *
     */
    Abc();

    /**
     * @brief Destroy the Abc object
     *
     */
    virtual ~Abc();

    /**
     * @brief
     *
     * @param abc
     * @param a
     * @return int
     */
    int method_a(Abc_t abc, int a);

    /**
     * @brief
     *
     * @param abc
     * @param a
     * @return int
     */
    int method_b(Abc_t abc, int a);

  protected:
  private:
};

#endif

/*******************************************************************************/
/** @} addtogroup end */

#endif // TEMPLATE_H
